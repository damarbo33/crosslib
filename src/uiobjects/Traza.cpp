// Class automatically generated by Dev-C++ New Class wizard

#include "Traza.h" // class's header file

ofstream *Traza::fout;
bool Traza::pintarTrazas;

/**
* Constructor
*/
Traza::Traza(const char *ruta){
    strcpy(this->ruta,ruta);
    iniFile();
}

/**
* Constructor
*/
Traza::Traza(){
    strcpy(this->ruta,RUTA_TRAZA);
    iniFile();
}

/**
* Destructor
*/
Traza::~Traza(){
    closeFile();
}


/**
*
*/
void Traza::iniFile(){
    setTraza(TRAZA_ENABLED);
    this->fout = NULL;
    this->fout = new ofstream(ruta, ios::out | ios::app | ios::binary);
}

/**
* closeFile
*/
void Traza::closeFile(){
    if (this->fout != NULL){
        this->fout->close();
        this->fout = NULL;
    }
}

/**
* print
*/
void Traza::print(string msg,int msg2, int logLevel){

    if (pintarTrazas && logLevel <= Constant::getTrazaLevel()){
        string myMsg = string(msg) + string(":") + Constant::TipoToStr(msg2);
        print(myMsg.c_str(), logLevel);
    }
}

/**
* print
*/
void Traza::print(string msg, int logLevel){
    if (pintarTrazas && logLevel <= Constant::getTrazaLevel()){
        if ( fout != NULL){
            if (!msg.empty()){
                string type = "-DEBUG";
                switch(logLevel){
                    case 0 :
                        type = "-FATAL";
                        break;
                    case 1 :
                        type = "-ERROR";
                        break;
                    case 2 :
                        type = "-WARN";
                        break;
                    case 3 :
                        type = "-INFO";
                        break;
                    case 4 :
                        type = "-DEBUG";
                        break;
                    case 5:
                        type = "-PARANOIC";
                        break;
                    default :
                        type = "-DDEBUG";
                        break;
                }
                *fout << Constant::fecha() << "-" << type << ": " << msg << endl;
            }
        }
    }
}

/**
* setTraza
*/
void Traza::setTraza(bool estado){
    pintarTrazas = estado;
}
